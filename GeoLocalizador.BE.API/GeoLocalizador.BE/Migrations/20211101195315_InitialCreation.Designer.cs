// <auto-generated />
using System;
using GeoLocalizador.BE.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GeoLocalizador.BE.Migrations
{
    [DbContext(typeof(GeoContext))]
    [Migration("20211101195315_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GeoLocalizador.BE.Models.Harbor", b =>
                {
                    b.Property<int>("IdHarbor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdMarineTraffic")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastChange")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHarbor");

                    b.ToTable("Harbors");
                });

            modelBuilder.Entity("GeoLocalizador.BE.Models.VesselGeoPosition", b =>
                {
                    b.Property<int>("IdPosition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AISSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Current_Port")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdVesselInfo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastPositionReceived")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LocationArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpeedCourse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VesselInfoIdNavio")
                        .HasColumnType("int");

                    b.HasKey("IdPosition");

                    b.HasIndex("VesselInfoIdNavio");

                    b.ToTable("VesselGeoPositions");
                });

            modelBuilder.Entity("GeoLocalizador.BE.Models.VesselInfo", b =>
                {
                    b.Property<int>("IdNavio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Call_Sign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gross_Tonnage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Home_Port")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastChange")
                        .HasColumnType("datetime2");

                    b.Property<string>("LengthxBreadth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MMSI")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vessel_Type_Detailed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vessel_Type_Generic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year_Built")
                        .HasColumnType("int");

                    b.HasKey("IdNavio");

                    b.ToTable("VesselInfos");
                });

            modelBuilder.Entity("GeoLocalizador.BE.Models.VesselGeoPosition", b =>
                {
                    b.HasOne("GeoLocalizador.BE.Models.VesselInfo", "VesselInfo")
                        .WithMany()
                        .HasForeignKey("VesselInfoIdNavio");

                    b.Navigation("VesselInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
